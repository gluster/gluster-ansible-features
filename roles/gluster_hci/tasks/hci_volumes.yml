---
# Create volumes for gluster_hci

- name: check if gluster_features_hci_cluster is set
  fail:
    msg: "Variable gluster_features_hci_cluster has to be defined"
  when: gluster_features_hci_cluster is not defined

- name: check if gluster_features_hci_volumes is set
  fail:
    msg: "Variable gluster_features_hci_volumes has to be defined"
  when: gluster_features_hci_volumes is not defined

# Determine if the volume type should be replicate or distribute
# Only for GD1 volumes. Ref: rhbz#1653575
- name: Determine the volume type
  set_fact:
    replica_count: 3
  when: gluster_features_hci_cluster|length >= 3

- name: Create the GlusterFS volumes
  gluster_volume:
     state: present
     name: "{{ item.volname }}"
     bricks: "{{ item.brick }}"
     master: "{{ gluster_features_hci_master | default(omit) }}"
     port: "{{ gluster_features_hci_port | default(omit) }}"
     replicas: "{{ replica_count | default(omit) }}"
     transport: tcp
     arbiters: "{{ item.arbiter | default(omit) }}"
     force: yes
     cluster: "{{ gluster_features_hci_cluster }}"
     options: "{{ gluster_features_hci_volume_options | default(omit) }}"
  run_once: true
  with_items: "{{ gluster_features_hci_volumes }}"
  when: "gluster_features_hci_master is not defined and gluster_features_hci_volumes[0].servers is not defined"

- name: Attach node to the trusted storage pool
  command: gluster peer probe {{ item }} --mode=script
  with_items: "{{ gluster_features_hci_cluster }}"
  when: "gluster_features_hci_volumes[0].servers is defined"
  run_once: true

- name: Pause for 10 seconds to avoid race
  pause: seconds=10
  when: "gluster_features_hci_volumes[0].servers is defined"

- name: Create the GlusterFS volumes for specific nodes
  gluster_volume:
     state: present
     name: "{{ item.volname }}"
     bricks: "{{ item.brick }}"
     master: "{{ gluster_features_hci_master | default(omit) }}"
     port: "{{ gluster_features_hci_port | default(omit) }}"
     replicas: "{{ replica_count | default(omit) }}"
     transport: tcp
     arbiters: "{{ item.arbiter | default(omit) }}"
     force: yes
     cluster: "{{ item.servers }}"
     options: "{{ gluster_features_hci_volume_options | default(omit) }}"
  run_once: true
  with_items: "{{ gluster_features_hci_volumes }}"
  when: "gluster_features_hci_volumes[0].servers is defined"

# gluster_volume does not support `gluster heal' command which gluster
# has implemented as an exception.
- name: Set granual-entry-heal on
  command: >
     gluster volume heal "{{item.volname}}" granular-entry-heal enable
  run_once: true
  with_items: "{{ gluster_features_hci_volumes }}"
  when: gluster_features_hci_master is not defined and replica_count is defined
