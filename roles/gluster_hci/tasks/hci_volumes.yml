---
# Create volumes for gluster_hci

- name: check if gluster_features_hci_cluster is set
  fail:
    msg: "Variable gluster_features_hci_cluster has to be defined"
  when: gluster_features_hci_cluster is not defined

- name: check if gluster_features_hci_volumes is set
  fail:
    msg: "Variable gluster_features_hci_volumes has to be defined"
  when: gluster_features_hci_volumes is not defined

# Determine if the volume type should be replicate or distribute
# Only for GD1 volumes. Ref: rhbz#1653575
- name: Determine the volume type
  set_fact:
    replica_count: 3
  when: gluster_features_hci_cluster|length == 3

# In case of distribute volumes update the volume options.
- name: Set volume options (if distribute volume)
  set_fact:
    gluster_features_hci_volume_options:
      { storage.owner-uid: '36',
        storage.owner-gid: '36',
        features.shard: 'on',
        performance.low-prio-threads: '32',
        performance.strict-o-direct: 'on',
        network.remote-dio: 'off',
        network.ping-timeout: '30',
        user.cifs: 'off',
        nfs.disable: 'on',
        performance.quick-read: 'off',
        performance.read-ahead: 'off',
        performance.io-cache: 'off',
        cluster.eager-lock: enable
      }
  when: gluster_features_hci_cluster|length == 1

- name: Create the GlusterFS volumes
  glusterd2_volume:
     state: present
     name: "{{ item.volname }}"
     bricks: "{{ item.brick }}"
     master: "{{ gluster_features_hci_master | default(omit) }}"
     port: "{{ gluster_features_hci_port | default(omit) }}"
     replicas: 3
     transport: tcp
     #arbiters: "{{ item.arbiter | default(omit) }}"
     force: yes
     cluster: "{{ gluster_features_hci_cluster }}"
     options: "{{ gluster_features_hci_volume_options | default(omit) }}"
  run_once: true
  with_items: "{{ gluster_features_hci_volumes }}"
  when: gluster_features_hci_master is defined

- name: Create the GlusterFS volumes
  gluster_volume:
     state: present
     name: "{{ item.volname }}"
     bricks: "{{ item.brick }}"
     master: "{{ gluster_features_hci_master | default(omit) }}"
     port: "{{ gluster_features_hci_port | default(omit) }}"
     replicas: "{{ replica_count | default(omit) }}"
     transport: tcp
     arbiters: "{{ item.arbiter | default(omit) }}"
     force: yes
     cluster: "{{ gluster_features_hci_cluster }}"
     options: "{{ gluster_features_hci_volume_options | default(omit) }}"
  run_once: true
  with_items: "{{ gluster_features_hci_volumes }}"
  when: gluster_features_hci_master is not defined

# gluster_volume does not support `gluster heal' command which gluster
# has implemented as an exception.
- name: Set granual-entry-heal on
  command: >
     gluster volume heal "{{item.volname}}" granular-entry-heal enable
  run_once: true
  with_items: "{{ gluster_features_hci_volumes }}"
  when: gluster_features_hci_master is not defined and replica_count is defined
